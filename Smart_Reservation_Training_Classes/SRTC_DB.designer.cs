#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Smart_Reservation_Training_Classes
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SRTC_DB")]
	public partial class SRTC_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBLCourse(TBLCourse instance);
    partial void UpdateTBLCourse(TBLCourse instance);
    partial void DeleteTBLCourse(TBLCourse instance);
    partial void InsertTBLReservation(TBLReservation instance);
    partial void UpdateTBLReservation(TBLReservation instance);
    partial void DeleteTBLReservation(TBLReservation instance);
    partial void InsertTBLRoom(TBLRoom instance);
    partial void UpdateTBLRoom(TBLRoom instance);
    partial void DeleteTBLRoom(TBLRoom instance);
    partial void InsertTBLUser(TBLUser instance);
    partial void UpdateTBLUser(TBLUser instance);
    partial void DeleteTBLUser(TBLUser instance);
        #endregion

        public SRTC_DBDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SRTC_DBConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public SRTC_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SRTC_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SRTC_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SRTC_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBLCourse> TBLCourses
		{
			get
			{
				return this.GetTable<TBLCourse>();
			}
		}
		
		public System.Data.Linq.Table<TBLReservation> TBLReservations
		{
			get
			{
				return this.GetTable<TBLReservation>();
			}
		}
		
		public System.Data.Linq.Table<TBLRoom> TBLRooms
		{
			get
			{
				return this.GetTable<TBLRoom>();
			}
		}
		
		public System.Data.Linq.Table<TBLUser> TBLUsers
		{
			get
			{
				return this.GetTable<TBLUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLCourses")]
	public partial class TBLCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CourseCode;
		
		private string _CourseName;
		
		private string _CourseType;
		
		private EntitySet<TBLReservation> _TBLReservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCourseTypeChanging(string value);
    partial void OnCourseTypeChanged();
    #endregion
		
		public TBLCourse()
		{
			this._TBLReservations = new EntitySet<TBLReservation>(new Action<TBLReservation>(this.attach_TBLReservations), new Action<TBLReservation>(this.detach_TBLReservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(MAX)")]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseType", DbType="NVarChar(MAX)")]
		public string CourseType
		{
			get
			{
				return this._CourseType;
			}
			set
			{
				if ((this._CourseType != value))
				{
					this.OnCourseTypeChanging(value);
					this.SendPropertyChanging();
					this._CourseType = value;
					this.SendPropertyChanged("CourseType");
					this.OnCourseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLCourse_TBLReservation", Storage="_TBLReservations", ThisKey="CourseCode", OtherKey="CourseCode")]
		public EntitySet<TBLReservation> TBLReservations
		{
			get
			{
				return this._TBLReservations;
			}
			set
			{
				this._TBLReservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLReservations(TBLReservation entity)
		{
			this.SendPropertyChanging();
			entity.TBLCourse = this;
		}
		
		private void detach_TBLReservations(TBLReservation entity)
		{
			this.SendPropertyChanging();
			entity.TBLCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLReservations")]
	public partial class TBLReservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReservationID;
		
		private System.Nullable<int> _UserID;
		
		private string _CourseCode;
		
		private string _RoomCode;
		
		private string _StartDate;
		
		private string _EndDate;
		
		private string _Time;
		
		private string _Duration;
		
		private string _Statuse;
		
		private string _Language;
		
		private string _TargetGroup;
		
		private string _ExpectedNumber;
		
		private string _ImplementingEntity;
		
		private string _BeneficiaryEntity;
		
		private string _LecturerName;
		
		private string _Requirements;
		
		private string _UseOfComputer;
		
		private string _CourseTopics;
		
		private string _Notes;
		
		private EntityRef<TBLCourse> _TBLCourse;
		
		private EntityRef<TBLRoom> _TBLRoom;
		
		private EntityRef<TBLUser> _TBLUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationIDChanging(int value);
    partial void OnReservationIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnRoomCodeChanging(string value);
    partial void OnRoomCodeChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(string value);
    partial void OnEndDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnStatuseChanging(string value);
    partial void OnStatuseChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnTargetGroupChanging(string value);
    partial void OnTargetGroupChanged();
    partial void OnExpectedNumberChanging(string value);
    partial void OnExpectedNumberChanged();
    partial void OnImplementingEntityChanging(string value);
    partial void OnImplementingEntityChanged();
    partial void OnBeneficiaryEntityChanging(string value);
    partial void OnBeneficiaryEntityChanged();
    partial void OnLecturerNameChanging(string value);
    partial void OnLecturerNameChanged();
    partial void OnRequirementsChanging(string value);
    partial void OnRequirementsChanged();
    partial void OnUseOfComputerChanging(string value);
    partial void OnUseOfComputerChanged();
    partial void OnCourseTopicsChanging(string value);
    partial void OnCourseTopicsChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public TBLReservation()
		{
			this._TBLCourse = default(EntityRef<TBLCourse>);
			this._TBLRoom = default(EntityRef<TBLRoom>);
			this._TBLUser = default(EntityRef<TBLUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReservationID
		{
			get
			{
				return this._ReservationID;
			}
			set
			{
				if ((this._ReservationID != value))
				{
					this.OnReservationIDChanging(value);
					this.SendPropertyChanging();
					this._ReservationID = value;
					this.SendPropertyChanged("ReservationID");
					this.OnReservationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._TBLUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="NVarChar(200)")]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					if (this._TBLCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCode", DbType="NVarChar(200)")]
		public string RoomCode
		{
			get
			{
				return this._RoomCode;
			}
			set
			{
				if ((this._RoomCode != value))
				{
					if (this._TBLRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RoomCode = value;
					this.SendPropertyChanged("RoomCode");
					this.OnRoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Char(15)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Char(15)")]
		public string EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Char(30)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(MAX)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Statuse", DbType="NVarChar(MAX)")]
		public string Statuse
		{
			get
			{
				return this._Statuse;
			}
			set
			{
				if ((this._Statuse != value))
				{
					this.OnStatuseChanging(value);
					this.SendPropertyChanging();
					this._Statuse = value;
					this.SendPropertyChanged("Statuse");
					this.OnStatuseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="NVarChar(MAX)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetGroup", DbType="NVarChar(MAX)")]
		public string TargetGroup
		{
			get
			{
				return this._TargetGroup;
			}
			set
			{
				if ((this._TargetGroup != value))
				{
					this.OnTargetGroupChanging(value);
					this.SendPropertyChanging();
					this._TargetGroup = value;
					this.SendPropertyChanged("TargetGroup");
					this.OnTargetGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedNumber", DbType="NVarChar(MAX)")]
		public string ExpectedNumber
		{
			get
			{
				return this._ExpectedNumber;
			}
			set
			{
				if ((this._ExpectedNumber != value))
				{
					this.OnExpectedNumberChanging(value);
					this.SendPropertyChanging();
					this._ExpectedNumber = value;
					this.SendPropertyChanged("ExpectedNumber");
					this.OnExpectedNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImplementingEntity", DbType="NVarChar(MAX)")]
		public string ImplementingEntity
		{
			get
			{
				return this._ImplementingEntity;
			}
			set
			{
				if ((this._ImplementingEntity != value))
				{
					this.OnImplementingEntityChanging(value);
					this.SendPropertyChanging();
					this._ImplementingEntity = value;
					this.SendPropertyChanged("ImplementingEntity");
					this.OnImplementingEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeneficiaryEntity", DbType="NVarChar(MAX)")]
		public string BeneficiaryEntity
		{
			get
			{
				return this._BeneficiaryEntity;
			}
			set
			{
				if ((this._BeneficiaryEntity != value))
				{
					this.OnBeneficiaryEntityChanging(value);
					this.SendPropertyChanging();
					this._BeneficiaryEntity = value;
					this.SendPropertyChanged("BeneficiaryEntity");
					this.OnBeneficiaryEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LecturerName", DbType="NVarChar(MAX)")]
		public string LecturerName
		{
			get
			{
				return this._LecturerName;
			}
			set
			{
				if ((this._LecturerName != value))
				{
					this.OnLecturerNameChanging(value);
					this.SendPropertyChanging();
					this._LecturerName = value;
					this.SendPropertyChanged("LecturerName");
					this.OnLecturerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Requirements", DbType="NVarChar(MAX)")]
		public string Requirements
		{
			get
			{
				return this._Requirements;
			}
			set
			{
				if ((this._Requirements != value))
				{
					this.OnRequirementsChanging(value);
					this.SendPropertyChanging();
					this._Requirements = value;
					this.SendPropertyChanged("Requirements");
					this.OnRequirementsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseOfComputer", DbType="NVarChar(10)")]
		public string UseOfComputer
		{
			get
			{
				return this._UseOfComputer;
			}
			set
			{
				if ((this._UseOfComputer != value))
				{
					this.OnUseOfComputerChanging(value);
					this.SendPropertyChanging();
					this._UseOfComputer = value;
					this.SendPropertyChanged("UseOfComputer");
					this.OnUseOfComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTopics", DbType="NVarChar(MAX)")]
		public string CourseTopics
		{
			get
			{
				return this._CourseTopics;
			}
			set
			{
				if ((this._CourseTopics != value))
				{
					this.OnCourseTopicsChanging(value);
					this.SendPropertyChanging();
					this._CourseTopics = value;
					this.SendPropertyChanged("CourseTopics");
					this.OnCourseTopicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLCourse_TBLReservation", Storage="_TBLCourse", ThisKey="CourseCode", OtherKey="CourseCode", IsForeignKey=true)]
		public TBLCourse TBLCourse
		{
			get
			{
				return this._TBLCourse.Entity;
			}
			set
			{
				TBLCourse previousValue = this._TBLCourse.Entity;
				if (((previousValue != value) 
							|| (this._TBLCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLCourse.Entity = null;
						previousValue.TBLReservations.Remove(this);
					}
					this._TBLCourse.Entity = value;
					if ((value != null))
					{
						value.TBLReservations.Add(this);
						this._CourseCode = value.CourseCode;
					}
					else
					{
						this._CourseCode = default(string);
					}
					this.SendPropertyChanged("TBLCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRoom_TBLReservation", Storage="_TBLRoom", ThisKey="RoomCode", OtherKey="RoomCode", IsForeignKey=true)]
		public TBLRoom TBLRoom
		{
			get
			{
				return this._TBLRoom.Entity;
			}
			set
			{
				TBLRoom previousValue = this._TBLRoom.Entity;
				if (((previousValue != value) 
							|| (this._TBLRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLRoom.Entity = null;
						previousValue.TBLReservations.Remove(this);
					}
					this._TBLRoom.Entity = value;
					if ((value != null))
					{
						value.TBLReservations.Add(this);
						this._RoomCode = value.RoomCode;
					}
					else
					{
						this._RoomCode = default(string);
					}
					this.SendPropertyChanged("TBLRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLUser_TBLReservation", Storage="_TBLUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public TBLUser TBLUser
		{
			get
			{
				return this._TBLUser.Entity;
			}
			set
			{
				TBLUser previousValue = this._TBLUser.Entity;
				if (((previousValue != value) 
							|| (this._TBLUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLUser.Entity = null;
						previousValue.TBLReservations.Remove(this);
					}
					this._TBLUser.Entity = value;
					if ((value != null))
					{
						value.TBLReservations.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLRooms")]
	public partial class TBLRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoomCode;
		
		private string _RoomName;
		
		private string _RoomType;
		
		private string _RoomLocation;
		
		private string _RoomCapacity;
		
		private EntitySet<TBLReservation> _TBLReservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomCodeChanging(string value);
    partial void OnRoomCodeChanged();
    partial void OnRoomNameChanging(string value);
    partial void OnRoomNameChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    partial void OnRoomLocationChanging(string value);
    partial void OnRoomLocationChanged();
    partial void OnRoomCapacityChanging(string value);
    partial void OnRoomCapacityChanged();
    #endregion
		
		public TBLRoom()
		{
			this._TBLReservations = new EntitySet<TBLReservation>(new Action<TBLReservation>(this.attach_TBLReservations), new Action<TBLReservation>(this.detach_TBLReservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCode", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoomCode
		{
			get
			{
				return this._RoomCode;
			}
			set
			{
				if ((this._RoomCode != value))
				{
					this.OnRoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RoomCode = value;
					this.SendPropertyChanged("RoomCode");
					this.OnRoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomName", DbType="NVarChar(MAX)")]
		public string RoomName
		{
			get
			{
				return this._RoomName;
			}
			set
			{
				if ((this._RoomName != value))
				{
					this.OnRoomNameChanging(value);
					this.SendPropertyChanging();
					this._RoomName = value;
					this.SendPropertyChanged("RoomName");
					this.OnRoomNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="NVarChar(MAX)")]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomLocation", DbType="NVarChar(MAX)")]
		public string RoomLocation
		{
			get
			{
				return this._RoomLocation;
			}
			set
			{
				if ((this._RoomLocation != value))
				{
					this.OnRoomLocationChanging(value);
					this.SendPropertyChanging();
					this._RoomLocation = value;
					this.SendPropertyChanged("RoomLocation");
					this.OnRoomLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCapacity", DbType="NVarChar(MAX)")]
		public string RoomCapacity
		{
			get
			{
				return this._RoomCapacity;
			}
			set
			{
				if ((this._RoomCapacity != value))
				{
					this.OnRoomCapacityChanging(value);
					this.SendPropertyChanging();
					this._RoomCapacity = value;
					this.SendPropertyChanged("RoomCapacity");
					this.OnRoomCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRoom_TBLReservation", Storage="_TBLReservations", ThisKey="RoomCode", OtherKey="RoomCode")]
		public EntitySet<TBLReservation> TBLReservations
		{
			get
			{
				return this._TBLReservations;
			}
			set
			{
				this._TBLReservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLReservations(TBLReservation entity)
		{
			this.SendPropertyChanging();
			entity.TBLRoom = this;
		}
		
		private void detach_TBLReservations(TBLReservation entity)
		{
			this.SendPropertyChanging();
			entity.TBLRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLUsers")]
	public partial class TBLUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Name;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private string _Role;
		
		private EntitySet<TBLReservation> _TBLReservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public TBLUser()
		{
			this._TBLReservations = new EntitySet<TBLReservation>(new Action<TBLReservation>(this.attach_TBLReservations), new Action<TBLReservation>(this.detach_TBLReservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(MAX)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLUser_TBLReservation", Storage="_TBLReservations", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<TBLReservation> TBLReservations
		{
			get
			{
				return this._TBLReservations;
			}
			set
			{
				this._TBLReservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLReservations(TBLReservation entity)
		{
			this.SendPropertyChanging();
			entity.TBLUser = this;
		}
		
		private void detach_TBLReservations(TBLReservation entity)
		{
			this.SendPropertyChanging();
			entity.TBLUser = null;
		}
	}
}
#pragma warning restore 1591
